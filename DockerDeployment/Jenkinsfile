/* */
pipeline {
    agent none
    options {
        timeout(time: 1, unit: 'DAYS')
        disableConcurrentBuilds()
    }
    stages {
        stage("Init") {
            agent any
            steps { initialize() }
        }
        stage("Check for Docker") {
            agent any
            steps { checkDocker() }
        }
    }
}
def initialize() {
    def dockerHome = tool 'myDocker'
    env.PATH = "${dockerHome}/bin:${env.PATH}"
    env.SYSTEM_NAME = "DSO"
    env.AWS_REGION = "us-east-1"
    showEnvironmentVariables()
}
def showEnvironmentVariables() {
    sh 'env | sort > env.txt'
    sh 'cat env.txt'
}
def checkDocker() {
    sh 'docker -v > docker.txt'
    sh 'cat docker.txt'
}